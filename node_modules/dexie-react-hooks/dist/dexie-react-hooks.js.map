{"version":3,"file":"dexie-react-hooks.js","sources":["../src/useObservable.ts","../src/useLiveQuery.ts","../src/usePermissions.ts"],"sourcesContent":["import React from 'react';\nexport interface InteropableObservable<T> {\n  subscribe(\n    onNext: (x: T) => any,\n    onError?: (error: any) => any\n  ): (() => any) | { unsubscribe(): any };\n  getValue?(): T;\n}\n\nexport function useObservable<T, TDefault>(\n  observable: InteropableObservable<T>\n): T | undefined;\nexport function useObservable<T, TDefault>(\n  observable: InteropableObservable<T>,\n  defaultResult: TDefault\n): T | TDefault;\nexport function useObservable<T>(\n  observableFactory: () => InteropableObservable<T>,\n  deps?: any[]\n): T | undefined;\nexport function useObservable<T, TDefault>(\n  factory: () => InteropableObservable<T>,\n  deps: any[],\n  defaultResult: TDefault\n): T | TDefault;\nexport function useObservable<T, TDefault>(\n  observableFactory:\n    | InteropableObservable<T>\n    | (() => InteropableObservable<T>),\n  arg2?: any,\n  arg3?: any\n) {\n  // Resolve vars from overloading variants of this function:\n  let deps: any[];\n  let defaultResult: TDefault;\n  if (typeof observableFactory === 'function') {\n    deps = arg2 || [];\n    defaultResult = arg3;\n  } else {\n    deps = [];\n    defaultResult = arg2;\n  }\n\n  // Create a ref that keeps the state we need\n  const monitor = React.useRef({\n    hasResult: false,\n    result: defaultResult as T | TDefault,\n    error: null as any,\n  });\n  // We control when component should rerender. Make triggerUpdate\n  // as examplified on React's docs at:\n  // https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n  const [_, triggerUpdate] = React.useReducer((x) => x + 1, 0);\n\n  // Memoize the observable based on deps\n  const observable = React.useMemo(() => {\n    // Make it remember previous subscription's default value when\n    // resubscribing.\n    const observable =\n      typeof observableFactory === 'function'\n        ? observableFactory()\n        : observableFactory;\n    if (!observable || typeof observable.subscribe !== 'function') {\n      if (observableFactory === observable) {\n        throw new TypeError(\n          `Given argument to useObservable() was neither a valid observable nor a function.`\n        );\n      } else {\n        throw new TypeError(\n          `Observable factory given to useObservable() did not return a valid observable.`\n        );\n      }\n    }\n\n    if (!monitor.current.hasResult) {\n      // Optimize for BehaviorSubject and other observables implementing getValue():\n      if (typeof observable.getValue === 'function') {\n        monitor.current.result = observable.getValue();\n        monitor.current.hasResult = true;\n      } else {\n        // Find out if the observable has a current value: try get it by subscribing and\n        // unsubscribing synchronously\n        const subscription = observable.subscribe((val) => {\n          monitor.current.result = val;\n          monitor.current.hasResult = true;\n        });\n        // Unsubscribe directly. We only needed any synchronous value if it was possible.\n        if (typeof subscription === 'function') {\n          subscription();\n        } else {\n          subscription.unsubscribe();\n        }\n      }\n    }\n    return observable;\n  }, deps);\n\n  // Integrate with react devtools:\n  React.useDebugValue(monitor.current.result);\n\n  // Subscribe to the observable\n  React.useEffect(() => {\n    const subscription = observable.subscribe(\n      (val) => {\n        const { current } = monitor;\n        if (current.error !== null || current.result !== val) {\n          current.error = null;\n          current.result = val;\n          current.hasResult = true;\n          triggerUpdate();\n        }\n      },\n      (err) => {\n        const { current } = monitor;\n        if (current.error !== err) {\n          current.error = err;\n          triggerUpdate();\n        }\n      }\n    );\n    return typeof subscription === 'function'\n      ? subscription // Support observables that return unsubscribe directly\n      : subscription.unsubscribe.bind(subscription);\n  }, deps);\n\n  // Throw if observable has emitted error so that\n  // an ErrorBoundrary can catch it\n  if (monitor.current.error) throw monitor.current.error;\n\n  // Return the current result\n  return monitor.current.result;\n}\n","import { liveQuery } from 'dexie';\nimport { useObservable } from './useObservable';\n\nexport function useLiveQuery<T>(\n  querier: () => Promise<T> | T,\n  deps?: any[]\n): T | undefined;\nexport function useLiveQuery<T, TDefault>(\n  querier: () => Promise<T> | T,\n  deps: any[],\n  defaultResult: TDefault\n): T | TDefault;\nexport function useLiveQuery<T, TDefault>(\n  querier: () => Promise<T> | T,\n  deps?: any[],\n  defaultResult?: TDefault\n): T | TDefault {\n  return useObservable(\n    () => liveQuery(querier),\n    deps || [],\n    defaultResult as TDefault\n  );\n}\n","import { Dexie } from 'dexie';\nimport { useObservable } from './useObservable';\nimport type { KeyPaths, TableProp } from 'dexie';\n\ninterface DexieCloudEntity {\n  table(): string;\n  realmId: string;\n  owner: string;\n}\n\nexport interface PermissionChecker<T, TableName extends string> {\n  add(...tableNames: TableName[]): boolean;\n  update(...props: KeyPaths<T>[]): boolean;\n  delete(): boolean;\n}\n\nexport function usePermissions<T extends DexieCloudEntity>(\n  entity: T\n): PermissionChecker<\n  T,\n  T extends { table: () => infer TableName } ? TableName : string\n>;\nexport function usePermissions<\n  TDB extends Dexie,\n  T extends { realmId: string; owner: string }\n>(db: TDB, table: TableProp<TDB>, obj: T): PermissionChecker<T, TableProp<TDB>>;\nexport function usePermissions(\n  firstArg:\n    | Dexie\n    | {\n        realmId?: string;\n        owner?: string;\n        table?: () => string;\n        readonly db?: Dexie;\n      },\n  table?: string,\n  obj?: { realmId?: string; owner?: string }\n) {\n  if (!firstArg)\n    throw new TypeError(\n      `Invalid arguments to usePermissions(): undefined or null`\n    );\n  let db: Dexie;\n  if (arguments.length >= 3) {\n    if (!('transaction' in firstArg)) {\n      // Using ducktyping instead of instanceof in case there are multiple Dexie modules in app.\n      // First arg is  ensures first arg is a Dexie instance\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 1st arg must be a Dexie instance`\n      );\n    }\n    if (typeof table !== 'string')\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 2nd arg must be string`\n      );\n    if (!obj || typeof obj !== 'object')\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 3rd arg must be an object`\n      );\n    db = firstArg;\n  } else {\n    if (firstArg instanceof Dexie)\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): Missing table and obj arguments.`\n      );\n\n    if (\n      typeof firstArg.table === 'function' &&\n      typeof firstArg.db === 'object'\n    ) {\n      db = firstArg.db!;\n      obj = firstArg;\n      table = firstArg.table();\n    } else {\n      throw new TypeError(\n        `Invalid arguments to usePermissions(). ` +\n          `Expected usePermissions(entity: DexieCloudEntity) or ` +\n          `usePermissions(db: Dexie, table: string, obj: DexieCloudObject)`\n      );\n    }\n  }\n  if (!('cloud' in db))\n    throw new Error(\n      `usePermissions() is only for Dexie Cloud but there's no dexie-cloud-addon active in given db.`\n    );\n  if (!('permissions' in db['cloud']))\n    throw new Error(`usePermissions() requires a newer version of dexie-cloud-addon. Please upgrade it.`)\n  return useObservable(\n    // @ts-ignore\n    () => db.cloud.permissions(obj, table),\n    [obj.realmId, obj.owner, table]\n  );\n}\n"],"names":["React","liveQuery","Dexie"],"mappings":"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"}