import { Dexie } from 'dexie';
import type { KeyPaths, TableProp } from 'dexie';
interface DexieCloudEntity {
    table(): string;
    realmId: string;
    owner: string;
}
export interface PermissionChecker<T, TableName extends string> {
    add(...tableNames: TableName[]): boolean;
    update(...props: KeyPaths<T>[]): boolean;
    delete(): boolean;
}
export declare function usePermissions<T extends DexieCloudEntity>(entity: T): PermissionChecker<T, T extends {
    table: () => infer TableName;
} ? TableName : string>;
export declare function usePermissions<TDB extends Dexie, T extends {
    realmId: string;
    owner: string;
}>(db: TDB, table: TableProp<TDB>, obj: T): PermissionChecker<T, TableProp<TDB>>;
export {};
//# sourceMappingURL=usePermissions.d.ts.map